//|--------------------------|PLUGINS|---------------------------|
plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id "maven-publish"
}
apply plugin: 'idea'
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

//|----------------------|ANDROID SECTION|-----------------------|
android {
    namespace "com.rzrasel.kotlinutils"
    compileSdk 33

    /*//|---------------------|DEFAULT CONFIG|---------------------|
    defaultConfig {
        minSdk 16
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    //|----------------------|BUILD TYPES|-----------------------|
    buildTypes {
        //|Build Types - Debug|----------------------------------|
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        //|Build Types - Release|--------------------------------|
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }*/
    //|-----------|COMPILE OPTIONS - JAVA VERSION 11|------------|
    /*compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    //|------------|KOTLIN OPTIONS - JAVA VERSION 11|------------|
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }*/
}

//|--------------------|DEPENDENCIES SECTION|--------------------|
dependencies {

    //|--------------|SYSTEM DEFINED DEPENDENCIES|---------------|
    /*implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "com.google.android.material:material:1.9.0"
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"*/

    //|---------------|USER DEFINED DEPENDENCIES|----------------|
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.1")
    api("org.apache.commons:commons-math3:3.6.1")
    implementation("com.google.guava:guava:31.1-jre")
}

afterEvaluate {
    android.libraryVariants.each { variant ->
        publishing.publications.create(variant.name, MavenPublication) {
            from components.findByName(variant.name)

            artifact androidJavadocsJar
            artifact androidSourcesJar

            groupId = "com.rzrasel"
            artifactId = "kotlinutils"
            version = "0.0.1"
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        /*if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }*/
        owner.classpath += variant.javaCompileProvider.get().classpath
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'

    options {
        memberLevel = JavadocMemberLevel.PROTECTED
    }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

/*
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = "com.rzrasel"
                artifactId = "kotlinutils"
                version = Config.libraryVersion
            }
        }
    }
}*/
